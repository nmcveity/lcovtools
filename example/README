This example data was generated by running lcovtools over the unit tests of
one of the populate unit testing libraries for Lua, lunit, found here:

	http://www.mroth.net/lunit/

The raw coverage output is dumped into the file:

	results.xml

A Python script is then invoked to get a list of valid lines from the Lua
source files.  This step uses the Lua compiler. It's something like:

	@python lcovtools-extractlines.py lunit\*.lua > example\validLines.xml

Another Python script is used to generate the XML for the report, as input
it takes the coverage stats and the valid lines:

	@python lcovtools-makereport.py validLines.xml results.xml > report.xml

You can launch the 'report.xml' at this stage provided that xsl/report.xsl 
and xsl/lua.css are in the same directory as it.  But I have used msxsl.exe
to generate a HTML page for convenience, 'report.html'.
